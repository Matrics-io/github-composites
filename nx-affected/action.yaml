name: Nx Docker Build & Push

description: Build and push Docker images using Nx and GCP Artifact Registry

inputs:
  args:
    default: ""
    description: Nx affected arguments
    required: true

  target:
    default: ""
    description: Nx affected --target argument
    required: true

  run-target:
    description: Run nx affected command
    required: true
    default: "true"

  base:
    description: Nx affected --base argument
    required: true

  use-nx-cloud:
    required: true
    default: "false"
    description: Use Nx Cloud features

  setup-go:
    default: "false"
    required: true
    description: Setup Go

  setup-python:
    default: "false"
    required: true
    description: Setup Python

  setup-node:
    default: "true"
    required: true
    description: Setup node

  setup-pnpm:
    default: "true"
    required: true
    description: Setup pnpm

  setup-nx:
    default: "true"
    required: true
    description: Setup Nx CLI

  go-version:
    default: ""
    required: true
    description: Go version

  go-cache-dependency-path:
    default: ""
    required: true
    description: Go cache dependency path. This will be used to identify cached dependencies

  python-version:
    default: ""
    required: true
    description: Python version

  pnpm-version:
    default: "10"
    required: true
    description: Pnpm version

  install-dependencies:
    default: "true"
    required: true
    description: Install dependencies

  nx-version:
    default: "20"
    required: true
    description: Nx version

  node-version:
    default: "22"
    description: Node version
    required: true

  node-cache:
    required: true
    default: pnpm
    description: Node cache

  node-cache-dependency-path:
    required: true
    default: package.json
    description: Node cache dependency path. This will be used to identify cached dependencies

  docker-login:
    required: true
    default: "true"
    description: Docker login in Google Artifacts

  google-region:
    required: true
    description: GCP region (e.g. us-central1)

  google-credentials:
    required: true
    description: GCP service account key in JSON format

runs:
  using: "composite"
  steps:
  - name: Docker Login to GCP Artifact Registry
    uses: docker/login-action@v3
    if: ${{ inputs.docker-login == 'true' }}
    with:
      registry: ${{ inputs.google-region }}-docker.pkg.dev
      username: _json_key
      password: ${{ inputs.google-credentials }}

  - name: Checkout
    uses: actions/checkout@v4
    with:
      fetch-depth: 0
      filter: tree:0

  - name: Setup Go
    if: ${{ inputs.setup-go == 'true' }}
    uses: actions/setup-go@v5
    with:
      go-version: ${{ inputs.go-version }}
      cache-dependency-path: ${{ inputs.go-cache-dependency-path }}

  - name: Setup Python
    if: ${{ inputs.setup-python == 'true' }}
    uses: actions/setup-python@v5
    with:
      python-version: ${{ inputs.python-version }}

  - name: Setup pnpm
    uses: pnpm/action-setup@v4
    with:
      version: ${{ inputs.pnpm-version }}

  - name: Setup Node
    if: ${{ inputs.setup-node == 'true' }}
    uses: actions/setup-node@v3
    with:
      node-version: ${{ inputs.node-version }}
      cache: ${{ inputs.node-cache }}
      cache-dependency-path: ${{ inputs.node-cache-dependency-path }}

  - name: Install dependencies
    if: ${{ inputs.install-dependencies == 'true'}}
    shell: bash
    run: pnpm install --frozen-lockfile

  - name: Setup Nx
    if: ${{ inputs.setup-nx == 'true' }}
    shell: bash
    run: npm install -g nx@${{ inputs.nx-version }}

  - uses: nrwl/nx-set-shas@v4
    with:
      main-branch-name: ${{ inputs.base }}

  - name: Build affected projects using Nx configuration
    if: ${{ inputs.run-target == 'true' }}
    shell: bash
    env:
      NX_NO_CLOUD: ${{ inputs.use-nx-cloud == 'false' }}
    run: nx affected ${{ inputs.args }} --target='${{ inputs.target }}'
