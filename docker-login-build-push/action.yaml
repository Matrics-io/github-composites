name: Docker login, build & push action
description: Docker composite that does the login into Google AR, builds and pushes the docker image to AR

inputs:
  image:
    required: true
    description: Docker image name

  context:
    required: true
    default: "."
    description: Docker build context

  dockerfile:
    required: true
    default: "Dockerfile"
    description: Dockerfile name & path

  args:
    required: true
    default: ""
    description: Docker args

  google-region:
    required: true
    description: Google Project Region

  google-credentials:
    required: true
    description: Google Credentials for AR access

  scan_image:
    required: true
    default: 'true'
    description: Scan the builded image before push

  scan_format:
    description: Trivy output format
    required: false
    default: "table"

  scan_exit_code:
    description: Exit code threshold (fail build if vulnerabilities â‰¥ this)
    required: false
    default: "1"

  scan_ignore_unfixed:
    description: Ignore unfixed vulns
    required: false
    default: "true"

  scan_vuln_type:
    description: Vulnerability types to scan
    required: false
    default: "os,library"

  scan_severity:
    description: Severity levels that will cause the action to fail
    required: false
    default: "CRITICAL,HIGH"

  push:
    required: true
    default: "true"
    description: Docker push

outputs:
  image:
    description: Image built by this action
    value: ${{ inputs.image }}

runs:
  using: composite
  steps:
    - name: Docker Login to GCP Artifact Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.google-region }}-docker.pkg.dev
        username: _json_key
        password: ${{ inputs.google-credentials }}

    - name: Docker Build
      id: docker-build
      shell: bash
      run: docker build ${{ inputs.args }} -t '${{ inputs.image }}' -f ${{ inputs.dockerfile }} ${{ inputs.context }}

    - name: Run Trivy vulnerability scanner
      if: ${{ inputs.scan_image == 'true' }}
      uses: aquasecurity/trivy-action@0.30.0
      with:
        image-ref: ${{ inputs.image }}
        format: ${{ inputs.scan_format }}
        exit-code: ${{ inputs.scan_exit_code }}
        ignore-unfixed: ${{ inputs.scan_ignore_unfixed }}
        vuln-type: ${{ inputs.scan_vuln_type }}
        severity: ${{ inputs.scan_severity }}

        
    - name: Docker Push
      id: docker-push
      if: ${{ inputs.push == 'true' }}
      shell: bash
      run: docker push '${{ inputs.image }}'
